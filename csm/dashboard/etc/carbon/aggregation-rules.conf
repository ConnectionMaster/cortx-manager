# CORTX-CSM: CORTX Management web and CLI interface.
# Copyright (c) 2020 Seagate Technology LLC and/or its Affiliates
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published
# by the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
# You should have received a copy of the GNU Affero General Public License
# along with this program. If not, see <https://www.gnu.org/licenses/>.
# For any questions about this software or licensing,
# please email opensource@seagate.com or cortx-questions@seagate.com.

# Gauges data
cluster.gauges.haproxy.app-main.BACKEND.bin (10) = avg <server>.gauges.haproxy.app-main.BACKEND.bin$
cluster.gauges.haproxy.app-main.BACKEND.bout (10) = avg <server>.gauges.haproxy.app-main.BACKEND.bout$
cluster.gauges.mero.free_space (10) = avg <ssu>.gauges.mero.free_space
cluster.gauges.mero.total_space (10) = avg <ssu>.gauges.mero.total_space
cluster.gauges.mero.used_space (10) = avg <ssu>.gauges.mero.used_space

# Haproxy error
cluster.gauges.haproxy.app-main.BACKEND.econ (10) = sum <server>.gauges.haproxy.app-main.BACKEND.econ$
cluster.gauges.haproxy.app-main.BACKEND.hrsp_4xx (10) = sum <server>.gauges.haproxy.app-main.BACKEND.hrsp_4xx$
cluster.gauges.haproxy.app-main.BACKEND.hrsp_5xx (10) = sum <server>.gauges.haproxy.app-main.BACKEND.hrsp_5xx$

# Counter data
cluster.counters.delete_multiobject_request_count.rate (10) = avg <server>.counters.delete_multiobject_request_count.rate$
cluster.counters.delete_object_request_count.rate (10) = avg <server>.counters.delete_object_request_count.rate$
cluster.counters.put_object_request_count.rate (10) = avg <server>.counters.put_object_request_count.rate$
cluster.counters.put_multipart_part_request_count.rate (10) = avg <server>.counters.put_multipart_part_request_count.rate$
cluster.counters.get_object_request_count.rate (10) = avg <server>.counters.get_object_request_count.rate$
cluster.counters.get_object_acl_request_count.rate (10) = avg <server>.counters.get_object_acl_request_count.rate$
cluster.counters.put_object_acl_request_count.rate (10) = avg <server>.counters.put_object_acl_request_count.rate$
cluster.counters.post_multipart_complete_request_count.rate (10) = avg <server>.counters.post_multipart_complete_request_count.rate$
cluster.counters.post_multipart_initiate_request_count.rate (10) = avg <server>.counters.post_multipart_initiate_request_count.rate$
cluster.counters.get_multipart_parts_request_count.rate (10) = avg <server>.counters.get_multipart_parts_request_count.rate$
cluster.counters.abort_multipart_request_count.rate (10) = avg <server>.counters.abort_multipart_request_count.rate$
cluster.counters.head_object_request_count.rate (10) = avg <server>.counters.head_object_request_count.rate$
cluster.counters.put_object_chunkupload_request_count.rate (10) = avg <server>.counters.put_object_chunkupload_request_count.rate$
cluster.counters.unsupported_api_count.rate (10) = avg <server>.counters.unsupported_api_count.rate$
cluster.counters.get_service_request_count.rate (10) = avg <server>.counters.get_service_request_count.rate$
cluster.counters.health_check_request_count.rate (10) = avg <server>.counters.health_check_request_count.rate$

# Authserver error
cluster.counters.authentication_failed_invalid_accesskey_count.count (10) = sum <server>.counters.authentication_failed_invalid_accesskey_count.count$
cluster.counters.authentication_failed_signature_mismatch_count.count (10) = sum <server>.counters.authentication_failed_signature_mismatch_count.count$

# Timer data

# Mean time taken
cluster.timers.total_request_time.mean (10) = avg <server>.timers.total_request_time.mean$
cluster.timers.create_object_success.mean (10) = avg <server>.timers.create_object_success.mean$
cluster.timers.delete_objects_from_clovis_success.mean (10) = avg <server>.timers.delete_objects_from_clovis_success.mean$
cluster.timers.delete_object_from_clovis_success.mean (10) = avg <server>.timers.delete_object_from_clovis_success.mean$
cluster.timers.write_to_clovis_op_success.mean (10) = avg <server>.timers.write_to_clovis_op_success.mean$
cluster.timers.read_object_data_success.mean (10) = avg <server>.timers.read_object_data_success.mean$
cluster.timers.get_keyval_success.mean (10) = avg <server>.timers.get_keyval_success.mean$
cluster.timers.put_keyval_success.mean (10) = avg <server>.timers.put_keyval_success.mean$
cluster.timers.delete_keyval_success.mean (10) = avg <server>.timers.delete_keyval_success.mean$
cluster.timers.multipart_create_object_success.mean (10) = avg <server>.timers.multipart_create_object_success.mean$
cluster.timers.chunkupload_create_object_success.mean (10) = avg <server>.timers.chunkupload_create_object_success.mean$

# S3server error handling
cluster.timers.create_object_failed.count (10) = sum <server>.timers.create_object_failed.count$
cluster.timers.multipart_create_object_failed.count (10) = sum <server>.timers.multipart_create_object_failed.count$
cluster.timers.chunkupload_create_object_failed.count (10) = sum <server>.timers.chunkupload_create_object_failed.count$
cluster.timers.get_keyval_failed.count (10) = sum <server>.timers.get_keyval_failed.count$
cluster.timers.create_index_op_failed.count (10) = sum <server>.timers.create_index_op_failed.count$
cluster.timers.delete_index_op_failed.count (10) = sum <server>.timers.delete_index_op_failed.count$
cluster.timers.put_keyval_failed.count (10) = sum <server>.timers.put_keyval_failed.count$
cluster.timers.delete_keyval_failed.count (10) = sum <server>.timers.delete_keyval_failed.count$
cluster.timers.delete_object_from_clovis_failed.count (10) = sum <server>.timers.delete_object_from_clovis_failed.count$
cluster.timers.delete_objects_from_clovis_failed.count (10) = sum <server>.timers.delete_objects_from_clovis_failed.count$
cluster.timers.write_to_clovis_op_failed.count (10) = sum <server>.timers.write_to_clovis_op_failed.count$
cluster.timers.read_object_data_failed.count (10) = sum <server>.timers.read_object_data_failed.count$
cluster.counters.internal_error_count.count (10) = sum <server>.counters.internal_error_count.count$
